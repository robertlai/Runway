// Generated by CoffeeScript 1.9.3
var homeApp;

homeApp = angular.module('homeApp', ['ui.router', 'ui.router.title']).config([
  '$stateProvider', '$urlRouterProvider', '$locationProvider', function(stateProvider, urlRouterProvider, locationProvider) {
    locationProvider.html5Mode({
      enabled: true
    });
    urlRouterProvider.otherwise('/groups/owned');
    return stateProvider.state('groups', {
      url: '/groups/:groupType',
      params: {
        groupType: 'owned'
      },
      templateUrl: '/partials/groups',
      controller: 'groupsController',
      resolve: {
        $title: function() {
          return 'Groups';
        }
      }
    }).state('manage', {
      url: '/manage',
      templateUrl: '/partials/manage',
      controller: 'manageController'
    }).state('manage.list', {
      url: '/list/:groupType',
      templateUrl: '/partials/manage-list',
      controller: 'manageListController',
      resolve: {
        $title: function() {
          return 'Manage';
        }
      }
    }).state('manage.edit', {
      abstract: true,
      url: '/edit',
      templateUrl: '/partials/manage-edit',
      resolve: {
        $title: function() {
          return 'Edit Group';
        }
      }
    }).state('manage.edit.owned', {
      url: '/owned/:groupName',
      templateUrl: '/partials/manage-edit-owned',
      controller: 'editOwnedController'
    }).state('manage.edit.joined', {
      url: '/joined/:groupName',
      templateUrl: '/partials/manage-edit-joined',
      controller: 'editJoinedController'
    });
  }
]).directive('groupTypeTabs', function() {
  return {
    restrist: 'E',
    templateUrl: '/partials/groupTypeTabs',
    replace: true,
    controller: [
      '$scope', '$http', function(scope, http) {
        return scope.$watch('groupType', function(newValue) {
          return http.get('/api/groups/' + newValue).then(function(groups) {
            scope.groups = groups.data;
            if (groups.data.length === 0) {
              if (newValue === 'owned') {
                return scope.error = 'You have no groups. Create one!';
              } else if (newValue === 'joined') {
                return scope.error = 'You have not been added to any groups.';
              }
            } else {
              return scope.error = null;
            }
          }, function(err) {
            return scope.error = 'Server Error.  Please contact support.';
          });
        });
      }
    ]
  };
}).controller('groupsController', function($scope, $stateParams) {
  return $scope.groupType = $stateParams.groupType;
}).controller('manageController', [
  '$scope', '$state', function(scope, state) {
    return scope.$on('$stateChangeSuccess', function(event, toState) {
      if (toState.name === 'manage') {
        return state.go('manage.list');
      }
    });
  }
]).controller('manageListController', [
  '$scope', '$state', '$http', function(scope, state, http) {
    return scope.$on('$stateChangeSuccess', function(event, toState, toParams) {
      var ref;
      if ((ref = toParams.groupType) !== 'owned' && ref !== 'joined') {
        state.go('manage.list', {
          groupType: 'owned'
        });
      }
      scope.groupType = toParams.groupType;
      return scope.addGroup = function() {
        if (scope.newGroupName && scope.newGroupName.trim().length > 0) {
          if (scope.newGroupName.match(/[^A-Za-z0-9\-_ ]/)) {
            return scope.newGroupError = 'This group contains invalid characters.';
          } else {
            return http.post('/api/newGroup?newGroupName=' + scope.newGroupName).then(function(addedGroupName) {
              scope.groups.push(addedGroupName.data);
              scope.newGroupName = '';
              return scope.newGroupError = null;
            }, function(err) {
              if (err.status === 409) {
                return scope.newGroupError = 'This group already exists.';
              } else {
                return scope.newGroupError = 'Server Error.  Please contact support.';
              }
            });
          }
        }
      };
    });
  }
]).controller('editOwnedController', [
  '$scope', '$state', '$stateParams', '$http', function(scope, state, stateParams, http) {
    return console.log('editOwnedController here');
  }
]).controller('editJoinedController', [
  '$scope', '$state', '$stateParams', '$http', function(scope, state, stateParams, http) {
    return console.log('editJoinedController here');
  }
]);

// Generated by CoffeeScript 1.9.3
var User, isLoggedIn;

User = require('../models/User');

isLoggedIn = function(req, res, next) {
  if (req.isAuthenticated()) {
    return next();
  } else {
    return res.redirect('/login');
  }
};

module.exports = function(app, passport) {
  app.get('/login', function(req, res) {
    return res.render('login', {
      title: 'Login',
      message: req.flash('loginMessage')
    });
  });
  app.post('/login', passport.authenticate('login', {
    successRedirect: '/home',
    failureRedirect: '/login',
    failureFlash: true
  }));
  app.get('/register', function(req, res) {
    return res.render('register', {
      title: 'Register',
      message: req.flash('registerMessage')
    });
  });
  app.post('/register', passport.authenticate('register', {
    successRedirect: '/home',
    failureRedirect: '/register',
    failureFlash: true
  }));
  app.get('/home', isLoggedIn, function(req, res) {
    return res.render('home', {
      username: req.user.username
    });
  });
  app.get('/workspace', isLoggedIn, function(req, res) {
    var groupRequested, username;
    username = req.user.username;
    groupRequested = req.query.group;
    return User.findOne({
      username: username
    }).select('groups').exec(function(err, user) {
      if (err) {
        return res.sendStatus(500);
      } else {
        if (user.groups.indexOf(groupRequested) !== -1) {
          return res.render('workspace', {
            username: username,
            groupName: groupRequested
          });
        } else {
          return res.render('error', {
            message: 'Unauthorized',
            error: {
              status: 401
            }
          });
        }
      }
    });
  });
  app.get('/logout', function(req, res) {
    req.logout();
    return res.redirect('/login');
  });
  return app.get('*', function(req, res) {
    return res.redirect('/login');
  });
};
